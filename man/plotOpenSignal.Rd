% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specificity-plots.R
\name{plotOpenSignal}
\alias{plotOpenSignal}
\title{The function plotOpenSignal visualizes the signalMatrix obtained from
calcOpenSignal.}
\usage{
plotOpenSignal(
  signalMatrix,
  plotType = "barPlot",
  cellGroup = NA,
  cellTypeMetadata = NA,
  colorScheme = c("#E31A1C", "#666666", "#B3DE69", "#A65628", "#33A02C", "#E6AB02",
    "#F0027F", "#FDC086", "#FFFF99", "#B3E2CD", "#B3CDE3", "#66A61E", "#F4CAE4",
    "#80B1D3", "#FFED6F", "#B15928", "#999999")
)
}
\arguments{
\item{signalMatrix}{Output data.table from \code{calcOpenSignal} function.}

\item{plotType}{Options are: jitter - jitter plot with box plot on top / 
boxPlot - box plot without individual points and outliers / 
barPlot (default) - bar height represents the median signal value
for a given cell type.}

\item{cellGroup}{- This option allows to selcet a group of cells to be 
plotted, if NA (default) all available cell groups are ploted, 
available options: {"blood", "bone", "CNS", "embryonic", "eye", 
"foreskin", "gastrointestinal", "heart", "liver", "lymphatic", 
"mammaryGland", "mouth", "respiratorySystem", "skeletalMuscle",
 "skin", "urinarySystem", "vasculature"}, can be passed as a 
 character string or vector of strings.}

\item{cellTypeMetadata}{Metadata for cell type - tissue association. This
option is for users, who provide their own open region signal 
matrix. The cellTypeMetadata matrix must contain two columns called
cellType and tissue. cellType column containes the cell type names 
in the provided signalMatrix column names. The tissue columns 
provides an information, which tissue the cell type comes from.}

\item{colorScheme}{Provide color values for each tissue if you want to 
change the default colors.}
}
\value{
A ggplot object.
}
\description{
The function plotOpenSignal visualizes the signalMatrix obtained from
calcOpenSignal.
}
\examples{
\dontrun{
query = system.file("extdata", "vistaEnhancers.bed.gz", package="GenomicDistributions")
GRquery = rtracklayer::import(query)
exampleCellMatrixFile = system.file("extdata", "example_cell_matrix.txt", 
package="GenomicDistributions")
cellMatrix = data.table::fread(exampleCellMatrixFile)
signalMatrix = calcOpenSignal(GRquery, cellMatrix)
plotSignal = plotOpenSignal(signalMatrix)
plotSignal = plotOpenSignal(signalMatrix, plotType = "jitter", cellGroup = "blood")
}
}
